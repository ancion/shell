#!/usr/bin/env bash

:<<'EOF'

  - 这里描述的启动 shell 进程接受的参数问题

EOF

echo "接收参数的数量:" $#   #argc
echo "接收参数的内容:" "$@"   #argv[0]之后的
echo "程序的名字:" $0 #argv[0]

echo "遍历参数如下:"

for i in "$@"  #$@用户输入参数的集合
do
    echo $i,  当前参数总个数为: $#
done


# $* 与 $@ 都表示所有的参数, 他们之间有什么区别呢
# 两者之间的区别，主要在使用时加上双引号之后
#
# $@ 会识别到合并在一个的多个参数，并以空白字符进行拆分
# $* 会将所有的参数合并，形成一个参数
echo '输出添加双引号参数 $* 的含义: '
for i in "$*"
do
    echo "$i"
done

#这些依次保存用户输入的参数，但是最多到$9, 
# $10 解释为 $1+0, 要想正常解释，需要使用 ${10}
echo "使用序列号逐个取出参数: "
echo $1 $2 $3 $4 $5 $6 $7 $8 $9 ${10} ${11} ${12} ${13} ${14}

echo "使用shift命令之后....."

for i in "$@"
do
    echo $1, 当前参数总个数为: $#
    shift #将当前的参数最左侧的剔除掉，后一个变成了第一个
done

